Здесь собраны практические и лабораторные работы по дисциплине "Структуры и алгоритмы обработки данных". А также представлена курсовая работа на тему "Словарь с дубликатами".

Задание на курсовую работу

Программа предназначена для выполнения различных действий со словарём.
В приложении должны быть реализованы следующие операции для чтения и записи данных в файл текстового формата:
1) Чтение данных из файла при запуске и во время работы приложения;
2) Запись введённых данных в файл.
В программный продукт должны быть интегрированы следующие возможности для работы со структурами данных непосредственно в самом приложении:
	• создание пустого словаря;
	• добавление элемента в словарь;
	• исключение элементов с заданным ключом из словаря;
	• поиск значений по ключу;
	• изменение значения элемента словаря; 
	• вывод словаря в порядке возрастания ключей.

ЗАДАНИЯ ПО ПРАКТИЧЕСКИМ РАБОТАМ


Общие условия
Все задания выполняются на любом удобном языке программирования высокого уровня. 
Результатом выполнения заданий должны являться:
	- Работающая программа (консольное или графическое приложение);
	- Отчет о выполненной работе.
Отчет о выполненной работе должен содержать:
	- Титульный лист
	- Задание на работу. Основные тезисы.
	- Основную часть работы. Описание хода решения задач. Методы, которыми пользовались при решении. Скриншоты, подтверждающие наличие работоспособной программы.
	- Список литературы (источники).
	- Приложение 1. Программный код.
Представлять (защищать) работы можно только очно, в течении часов занятий. По электронной почте работы не согласовываются и не проверяются.
Работы представляются к защите в бумажном виде. При этом во время защиты запускается работающее приложение на рабочем компьютере в классе или личном ноутбуке.
	

Задание 1 
Необходимо построить график ретроспективной динамики курса валют к рублю путем парсинга открытых данных с сайтов банков и прочих официальных финансовых организаций. 
График должен представлять собой набор точек, соответствующих по шкалам осей даты и коэфф. соотношения (Валюта/Рубль). Период, за который нужно собрать информацию: 10 лет (с 2010 по 2020 года). 
Шаг временной шкалы: день, неделя, месяц, год. 
В программе следует предусмотреть возможность выбора шага. 
В программе следует предусмотреть возможность выбора периода, за который мы проводим наблюдение за графиком.
Валюта выбирается студентом по своему усмотрению.

Задание 2
Необходимо на систему с графиком из задания 1 нанести две дополнительные функции (линии) Simple Moving Average. 
Период первой линии – 10 дней. Период второй – 100 дней.
 

Больше о техническом анализе и SMA в Python реализации по ссылке.

Задание 3
Необходимо построить график погоды на основании метеорологических данных в открытых источниках. 
Период, за который нужно собрать данные: 10 лет (с 2010 по 2020 года).
Минимальная единица (шаг) – 1 сутки. Значение температуры для одних суток берется среднедневное (не среднесуточное).
В программе следует предусмотреть возможность выбора шага. 
В программе следует предусмотреть возможность выбора периода, за который мы проводим наблюдение за графиком.
Шаг временной шкалы: день, неделя, месяц, год. 
Город или локация, по которой ведется сбор данных выбирается студентом по своему усмотрению.


Задание 4
Необходимо построить маршрут полета воздушного судна на основе открытых данных с сайтов аэронавигации.
Маршрут должен быть собран из значений GPS координат, через которые проходит или проходила траектория движения воздушного судна. 
В программе следует предусмотреть возможность ручного ввода уникального номера конкретного полёта воздушного судна (ID, бортового номера или номера рейса в сочетании с датой).
В программе следует предусмотреть возможность ввода даты и времени для уточнения конкретной координаты.
Программа должна возвращать в оконном интерфейсе карту, на которой можно увидеть точку или траекторию.

Лабораторная работа №1. Древовидные структуры
Выведите номера вершин, у которых количество потомков в левом поддереве отличается от количества потомков в правом поддереве на 1.

Лабораторная работа № 3. Графовые структуры данных
За проезд по каждой дороге взымается некоторая пошлина. Найдите путь из города А в город B с минимальной величиной S+P, где S - сумма длин дорог пути, а P - сумма пошлин проезжаемых дорог.